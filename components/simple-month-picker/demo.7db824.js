(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{4998:function(n,a,s){n.exports={basic:s(5712),range:s(5713)}},5712:function(n,a,s){n.exports={content:[["p","基础用法"]],meta:{order:0,title:{"zh-CN":"基础用法","en-US":"Basic"},filename:"components/simple-month-picker/demo/basic.md",id:"components-simple-month-picker-demo-basic"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> SimpleMonthPicker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      value<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'change\'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleMonthPicker</span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> SimpleMonthPicker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'change\'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleMonthPicker</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(37),s(15));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,u(t.key),t)}}function o(n,a,s){return a=e(a),function(n,a){if(a&&("object"===t(a)||"function"==typeof a))return a;if(void 0!==a)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}(n,function(){try{var n=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(n){}return function(){return!!n}()}()?Reflect.construct(a,s||[],e(n).constructor):a.apply(n,s))}function e(n){return(e=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function c(n,a){return(c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,a){return n.__proto__=a,n})(n,a)}function u(n){var a=function(n,a){if("object"!=t(n)||!n)return n;var s=n[Symbol.toPrimitive];if(void 0!==s){var p=s.call(n,a||"default");if("object"!=t(p))return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(n)}(n,"string");return"symbol"==t(a)?a:a+""}var l=function(s){function t(n){var a;return function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t),function(n,a,s){(a=u(a))in n?Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[a]=s}(a=o(this,t,[n]),"handleChange",(function(n){console.log("change",n),a.setState({value:n})})),a.state={value:{}},a}return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),a&&c(n,a)}(t,s),e=t,(l=[{key:"render",value:function(){var s=this.state.value;return n.createElement(a.SimpleMonthPicker,{value:s,onChange:this.handleChange})}}])&&p(e.prototype,l),k&&p(e,k),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,l,k}(n.Component);return n.createElement(l,null)}}},5713:function(n,a,s){n.exports={content:[["p","月份范围选择的用法。"]],meta:{order:1,title:"月份范围选择",filename:"components/simple-month-picker/demo/range.md",id:"components-simple-month-picker-demo-range"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> SimpleMonthPicker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">MonthPickerDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n\n  state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n  handleStartChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    startM <span class="token operator">=</span> value<span class="token punctuation">.</span>month<span class="token punctuation">;</span>\n    startY <span class="token operator">=</span> value<span class="token punctuation">.</span>year<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>endM <span class="token operator">&amp;&amp;</span> endY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>endY <span class="token operator">&lt;</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        endY <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n        endM <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>endY <span class="token operator">===</span> startY <span class="token operator">&amp;&amp;</span> endM <span class="token operator">&lt;</span> startM<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        endY <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n        endM <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  handleEndChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">,</span> hitherto <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>hitherto<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      hitherto <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      endY <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n      endM <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      endY <span class="token operator">=</span> value<span class="token punctuation">.</span>year<span class="token punctuation">;</span>\n      endM <span class="token operator">=</span> value<span class="token punctuation">.</span>month<span class="token punctuation">;</span>\n      hitherto <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hitherto<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">,</span> hitherto <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleMonthPicker</span>\n          <span class="token attr-name">startYear</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">1980</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleStartChange<span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            month<span class="token punctuation">:</span> startM<span class="token punctuation">,</span>\n            year<span class="token punctuation">:</span> startY\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>  至  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleMonthPicker</span>\n          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>日期选择器<span class="token punctuation">"</span></span>\n          <span class="token attr-name">hitherto</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            month<span class="token punctuation">:</span> endM<span class="token punctuation">,</span>\n            year<span class="token punctuation">:</span> endY<span class="token punctuation">,</span>\n            hitherto\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">disableYear</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> year <span class="token operator">&lt;</span> startY<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span></span><span class="token attr-name">}</span>\n          <span class="token attr-name">disableMonth</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>month<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>startY <span class="token operator">&amp;&amp;</span> startM<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">&lt;</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">===</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> month <span class="token operator">&lt;</span> startM<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span></span>\n            <span class="token attr-name">return</span> <span class="token attr-name">false;</span>\n          <span class="token attr-name">}}</span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleEndChange<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MonthPickerDemo</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> SimpleMonthPicker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">MonthPickerDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n\n  state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleStartChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    startM <span class="token operator">=</span> value<span class="token punctuation">.</span>month<span class="token punctuation">;</span>\n    startY <span class="token operator">=</span> value<span class="token punctuation">.</span>year<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>endM <span class="token operator">&amp;&amp;</span> endY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>endY <span class="token operator">&lt;</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        endY <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n        endM <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>endY <span class="token operator">===</span> startY <span class="token operator">&amp;&amp;</span> endM <span class="token operator">&lt;</span> startM<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        endY <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n        endM <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleEndChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">,</span> hitherto <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>hitherto<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      hitherto <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      endY <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n      endM <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      endY <span class="token operator">=</span> value<span class="token punctuation">.</span>year<span class="token punctuation">;</span>\n      endM <span class="token operator">=</span> value<span class="token punctuation">.</span>month<span class="token punctuation">;</span>\n      hitherto <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hitherto<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> startM<span class="token punctuation">,</span> startY<span class="token punctuation">,</span> endM<span class="token punctuation">,</span> endY<span class="token punctuation">,</span> hitherto <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleMonthPicker</span></span>\n          <span class="token attr-name">startYear</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1980</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleStartChange<span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">month</span><span class="token operator">:</span> startM<span class="token punctuation">,</span>\n            <span class="token literal-property property">year</span><span class="token operator">:</span> startY\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>  至  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>SimpleMonthPicker\n          placeholder<span class="token operator">=</span><span class="token string">"日期选择器"</span>\n          hitherto<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">month</span><span class="token operator">:</span> endM<span class="token punctuation">,</span>\n            <span class="token literal-property property">year</span><span class="token operator">:</span> endY<span class="token punctuation">,</span>\n            hitherto\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          disableYear<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">year</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> year <span class="token operator">&lt;</span> startY<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          disableMonth<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">month<span class="token punctuation">,</span> year</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>startY <span class="token operator">&amp;&amp;</span> startM<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">&lt;</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">===</span> startY<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> month <span class="token operator">&lt;</span> startM<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleEndChange<span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MonthPickerDemo</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(37),s(15));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function o(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,k(t.key),t)}}function e(n,a,s){return a=c(a),function(n,a){if(a&&("object"===t(a)||"function"==typeof a))return a;if(void 0!==a)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}(n,function(){try{var n=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(n){}return function(){return!!n}()}()?Reflect.construct(a,s||[],c(n).constructor):a.apply(n,s))}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,a){return(u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,a){return n.__proto__=a,n})(n,a)}function l(n,a,s){return(a=k(a))in n?Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[a]=s,n}function k(n){var a=function(n,a){if("object"!=t(n)||!n)return n;var s=n[Symbol.toPrimitive];if(void 0!==s){var p=s.call(n,a||"default");if("object"!=t(p))return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(n)}(n,"string");return"symbol"==t(a)?a:a+""}var r=function(s){function t(){var n;p(this,t);for(var a=arguments.length,s=new Array(a),o=0;o<a;o++)s[o]=arguments[o];return l(n=e(this,t,[].concat(s)),"state",{}),l(n,"handleStartChange",(function(a){var s=n.state,t=s.startM,p=s.startY,o=s.endM,e=s.endY;t=a.month,p=a.year,o&&e&&(e<p||e===p&&o<t)&&(e=void 0,o=void 0),n.setState({startM:t,startY:p,endM:o,endY:e})})),l(n,"handleEndChange",(function(a){var s=n.state,t=s.endM,p=s.endY,o=s.hitherto;a.hitherto?(o=!0,p=void 0,t=void 0):(p=a.year,t=a.month,o=!1),n.setState({hitherto:o,endM:t,endY:p})})),n}return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),a&&u(n,a)}(t,s),c=t,(k=[{key:"render",value:function(){var s=this.state,t=s.startM,p=s.startY,o=s.endM,e=s.endY,c=s.hitherto;return n.createElement("div",null,n.createElement(a.SimpleMonthPicker,{startYear:1980,onChange:this.handleStartChange,value:{month:t,year:p}}),n.createElement("span",null,"  至  "),n.createElement(a.SimpleMonthPicker,{placeholder:"日期选择器",hitherto:!0,value:{month:o,year:e,hitherto:c},disableYear:function(n){return!!p&&n<p},disableMonth:function(n,a){if(p&&t){if(a<p)return!0;if(a===p)return n<t}return!1},onChange:this.handleEndChange}))}}])&&o(c.prototype,k),r&&o(c,r),Object.defineProperty(c,"prototype",{writable:!1}),c;var c,k,r}(n.Component);return n.createElement(r,null)}}}}]);