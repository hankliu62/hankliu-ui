(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{4610:function(n,s,a){n.exports={content:{"zh-CN":[["p","点击上传用户头像，并使用 ",["code","beforeUpload"]," 限制用户上传的图片格式和大小。"],["blockquote",["p",["code","beforeUpload"]," 的返回值可以是一个 Promise 以支持异步处理，如服务端校验等：",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"示例"],"。"]]],"en-US":[["p","Click to upload user's avatar, and validate size and format of picture with ",["code","beforeUpload"],"."],["blockquote",["p","The return value of function ",["code","beforeUpload"]," can be a Promise to check asynchronously. ",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"demo"]]]]},meta:{order:1,title:{"zh-CN":"用户头像","en-US":"Avatar"},filename:"components/upload/demo/avatar.md",id:"components-upload-demo-avatar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { LoadingOutlined<span class="token punctuation">,</span> PlusOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadChangeParam } from <span class="token string">\'antd/es/upload\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">:</span> RcFile<span class="token punctuation">,</span> callback<span class="token punctuation">:</span> <span class="token punctuation">(</span>url<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'load\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> beforeUpload <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'image/jpeg\'</span> || file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'image/png\'</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isJpgOrPng<span class="token punctuation">)</span> {\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG/PNG file!\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isLt2M<span class="token punctuation">)</span> {\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n  return isJpgOrPng <span class="token operator">&amp;</span><span class="token operator">&amp;</span> isLt2M<span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token punctuation">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      return<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> {\n      <span class="token operator">/</span><span class="token operator">/</span> Get this url from response <span class="token keyword">in</span> real world<span class="token punctuation">.</span>\n      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">,</span> url <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      {loading <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>}\n      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Upload\n      name<span class="token operator">=</span><span class="token string">"avatar"</span>\n      listType<span class="token operator">=</span><span class="token string">"picture-card"</span>\n      className<span class="token operator">=</span><span class="token string">"avatar-uploader"</span>\n      showUploadList<span class="token operator">=</span>{<span class="token boolean">false</span>}\n      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n      beforeUpload<span class="token operator">=</span>{beforeUpload}\n      onChange<span class="token operator">=</span>{handleChange}\n    <span class="token operator">></span>\n      {imageUrl <span class="token operator">?</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span>{imageUrl} alt<span class="token operator">=</span><span class="token string">"avatar"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> }} <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> uploadButton}\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadChangeParam <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token operator">:</span> RcFile<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'load\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/png\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG/PNG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token operator">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Get this url from response in real world.</span>\n      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">,</span> url <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>\n      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'load\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/png\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG/PNG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Get this url from response in real world.</span>\n      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        Upload\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>\n      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span>\n          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n        uploadButton\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return u(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return u(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var i=function(n){var s="image/jpeg"===n.type||"image/png"===n.type;s||o.message.error("You can only upload JPG/PNG file!");var a=n.size/1024/1024<2;return a||o.message.error("Image must smaller than 2MB!"),s&&a},k=function(){var n=l((0,e.useState)(!1),2),s=n[0],a=n[1],t=l((0,e.useState)(),2),c=t[0],u=t[1],k=e.default.createElement("div",null,s?e.default.createElement(p.LoadingOutlined,null):e.default.createElement(p.PlusOutlined,null),e.default.createElement("div",{style:{marginTop:8}},"Upload"));return e.default.createElement(o.Upload,{name:"avatar",listType:"picture-card",className:"avatar-uploader",showUploadList:!1,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",beforeUpload:i,onChange:function(n){var s,t,p;"uploading"!==n.file.status?"done"===n.file.status&&(s=n.file.originFileObj,t=function(n){a(!1),u(n)},(p=new FileReader).addEventListener("load",(function(){return t(p.result)})),p.readAsDataURL(s)):a(!0)}},c?e.default.createElement("img",{src:c,alt:"avatar",style:{width:"100%"}}):k)};return n.createElement(k)}}},4611:function(n,s,a){n.exports={content:{"zh-CN":[["p","经典款式，用户点击按钮弹出文件选择框。"]],"en-US":[["p","Classic mode. File selection dialog pops up when upload button is clicked."]]},meta:{order:0,title:{"zh-CN":"点击上传","en-US":"Upload by clicking"},filename:"components/upload/demo/basic.md",id:"components-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  headers<span class="token punctuation">:</span> {\n    authorization<span class="token punctuation">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    authorization<span class="token operator">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(n){"uploading"!==n.file.status&&console.log(n.file,n.fileList),"done"===n.file.status?o.message.success("".concat(n.file.name," file uploaded successfully")):"error"===n.file.status&&o.message.error("".concat(n.file.name," file upload failed."))}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Click to Upload"))};return n.createElement(l)}}},4612:function(n,s,a){n.exports={content:{"zh-CN":[["p","配合 ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," 实现上传前裁切图片。"]],"en-US":[["p","Use ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," to crop image before uploading."]]},meta:{order:14,title:{"zh-CN":"上传前裁切图片","en-US":"Crop image before uploading"},filename:"components/upload/demo/crop-image.md",id:"components-upload-demo-crop-image"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport ImgCrop from <span class="token string">\'antd-img-crop\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onPreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    let src <span class="token operator">=</span> file<span class="token punctuation">.</span>url as string<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!src<span class="token punctuation">)</span> {\n      src <span class="token operator">=</span> await new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">const</span> image <span class="token operator">=</span> new <span class="token function">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    imgWindow<span class="token operator">?</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ImgCrop rotate<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Upload\n        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>\n        fileList<span class="token operator">=</span>{fileList}\n        onChange<span class="token operator">=</span>{onChange}\n        onPreview<span class="token operator">=</span>{onPreview}\n      <span class="token operator">></span>\n        {fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token string">\'+ Upload\'</span>}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>ImgCrop<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">\'antd-img-crop\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url <span class="token keyword">as</span> string<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">\'+ Upload\'</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">\'antd-img-crop\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">\'+ Upload\'</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p,o=a(17),e=(p=a(4641))&&p.__esModule?p:{default:p},c=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=l(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var c=o?Object.getOwnPropertyDescriptor(n,e):null;c&&(c.get||c.set)?Object.defineProperty(p,e,c):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function l(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(l=function(n){return n?a:s})(n)}function u(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */u=function(){return s};var n,s={},a=Object.prototype,p=a.hasOwnProperty,o=Object.defineProperty||function(n,s,a){n[s]=a.value},e="function"==typeof Symbol?Symbol:{},c=e.iterator||"@@iterator",l=e.asyncIterator||"@@asyncIterator",i=e.toStringTag||"@@toStringTag";function k(n,s,a){return Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}),n[s]}try{k({},"")}catch(n){k=function(n,s,a){return n[s]=a}}function r(n,s,a,t){var p=s&&s.prototype instanceof h?s:h,e=Object.create(p.prototype),c=new E(t||[]);return o(e,"_invoke",{value:P(n,a,c)}),e}function d(n,s,a){try{return{type:"normal",arg:n.call(s,a)}}catch(n){return{type:"throw",arg:n}}}s.wrap=r;var m="suspendedStart",g="executing",f="completed",y={};function h(){}function w(){}function v(){}var b={};k(b,c,(function(){return this}));var U=Object.getPrototypeOf,x=U&&U(U(R([])));x&&x!==a&&p.call(x,c)&&(b=x);var j=v.prototype=h.prototype=Object.create(b);function L(n){["next","throw","return"].forEach((function(s){k(n,s,(function(n){return this._invoke(s,n)}))}))}function S(n,s){function a(o,e,c,l){var u=d(n[o],n,e);if("throw"!==u.type){var i=u.arg,k=i.value;return k&&"object"==t(k)&&p.call(k,"__await")?s.resolve(k.__await).then((function(n){a("next",n,c,l)}),(function(n){a("throw",n,c,l)})):s.resolve(k).then((function(n){i.value=n,c(i)}),(function(n){return a("throw",n,c,l)}))}l(u.arg)}var e;o(this,"_invoke",{value:function(n,t){function p(){return new s((function(s,p){a(n,t,s,p)}))}return e=e?e.then(p,p):p()}})}function P(s,a,t){var p=m;return function(o,e){if(p===g)throw Error("Generator is already running");if(p===f){if("throw"===o)throw e;return{value:n,done:!0}}for(t.method=o,t.arg=e;;){var c=t.delegate;if(c){var l=O(c,t);if(l){if(l===y)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(p===m)throw p=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);p=g;var u=d(s,a,t);if("normal"===u.type){if(p=t.done?f:"suspendedYield",u.arg===y)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(p=f,t.method="throw",t.arg=u.arg)}}}function O(s,a){var t=a.method,p=s.iterator[t];if(p===n)return a.delegate=null,"throw"===t&&s.iterator.return&&(a.method="return",a.arg=n,O(s,a),"throw"===a.method)||"return"!==t&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+t+"' method")),y;var o=d(p,s.iterator,a.arg);if("throw"===o.type)return a.method="throw",a.arg=o.arg,a.delegate=null,y;var e=o.arg;return e?e.done?(a[s.resultName]=e.value,a.next=s.nextLoc,"return"!==a.method&&(a.method="next",a.arg=n),a.delegate=null,y):e:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,y)}function C(n){var s={tryLoc:n[0]};1 in n&&(s.catchLoc=n[1]),2 in n&&(s.finallyLoc=n[2],s.afterLoc=n[3]),this.tryEntries.push(s)}function F(n){var s=n.completion||{};s.type="normal",delete s.arg,n.completion=s}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(C,this),this.reset(!0)}function R(s){if(s||""===s){var a=s[c];if(a)return a.call(s);if("function"==typeof s.next)return s;if(!isNaN(s.length)){var o=-1,e=function a(){for(;++o<s.length;)if(p.call(s,o))return a.value=s[o],a.done=!1,a;return a.value=n,a.done=!0,a};return e.next=e}}throw new TypeError(t(s)+" is not iterable")}return w.prototype=v,o(j,"constructor",{value:v,configurable:!0}),o(v,"constructor",{value:w,configurable:!0}),w.displayName=k(v,i,"GeneratorFunction"),s.isGeneratorFunction=function(n){var s="function"==typeof n&&n.constructor;return!!s&&(s===w||"GeneratorFunction"===(s.displayName||s.name))},s.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,v):(n.__proto__=v,k(n,i,"GeneratorFunction")),n.prototype=Object.create(j),n},s.awrap=function(n){return{__await:n}},L(S.prototype),k(S.prototype,l,(function(){return this})),s.AsyncIterator=S,s.async=function(n,a,t,p,o){void 0===o&&(o=Promise);var e=new S(r(n,a,t,p),o);return s.isGeneratorFunction(a)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},L(j),k(j,i,"Generator"),k(j,c,(function(){return this})),k(j,"toString",(function(){return"[object Generator]"})),s.keys=function(n){var s=Object(n),a=[];for(var t in s)a.push(t);return a.reverse(),function n(){for(;a.length;){var t=a.pop();if(t in s)return n.value=t,n.done=!1,n}return n.done=!0,n}},s.values=R,E.prototype={constructor:E,reset:function(s){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(F),!s)for(var a in this)"t"===a.charAt(0)&&p.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=n)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(s){if(this.done)throw s;var a=this;function t(t,p){return c.type="throw",c.arg=s,a.next=t,p&&(a.method="next",a.arg=n),!!p}for(var o=this.tryEntries.length-1;o>=0;--o){var e=this.tryEntries[o],c=e.completion;if("root"===e.tryLoc)return t("end");if(e.tryLoc<=this.prev){var l=p.call(e,"catchLoc"),u=p.call(e,"finallyLoc");if(l&&u){if(this.prev<e.catchLoc)return t(e.catchLoc,!0);if(this.prev<e.finallyLoc)return t(e.finallyLoc)}else if(l){if(this.prev<e.catchLoc)return t(e.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<e.finallyLoc)return t(e.finallyLoc)}}}},abrupt:function(n,s){for(var a=this.tryEntries.length-1;a>=0;--a){var t=this.tryEntries[a];if(t.tryLoc<=this.prev&&p.call(t,"finallyLoc")&&this.prev<t.finallyLoc){var o=t;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=s&&s<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=s,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(e)},complete:function(n,s){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&s&&(this.next=s),y},finish:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.finallyLoc===n)return this.complete(a.completion,a.afterLoc),F(a),y}},catch:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.tryLoc===n){var t=a.completion;if("throw"===t.type){var p=t.arg;F(a)}return p}}throw Error("illegal catch attempt")},delegateYield:function(s,a,t){return this.delegate={iterator:R(s),resultName:a,nextLoc:t},"next"===this.method&&(this.arg=n),y}},s}function i(n,s,a,t,p,o,e){try{var c=n[o](e),l=c.value}catch(n){return void a(n)}c.done?s(l):Promise.resolve(l).then(t,p)}function k(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return r(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return r(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var d=function(){var n=k((0,c.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]),2),s=n[0],a=n[1],t=function(){var n,s=(n=u().mark((function n(s){var a,t,p;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(a=s.url){n.next=5;break}return n.next=4,new Promise((function(n){var a=new FileReader;a.readAsDataURL(s.originFileObj),a.onload=function(){return n(a.result)}}));case 4:a=n.sent;case 5:(t=new Image).src=a,null==(p=window.open(a))||p.document.write(t.outerHTML);case 9:case"end":return n.stop()}}),n)})),function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){i(o,t,p,e,c,"next",n)}function c(n){i(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n){return s.apply(this,arguments)}}();return c.default.createElement(e.default,{rotate:!0},c.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:s,onChange:function(n){var s=n.fileList;a(s)},onPreview:t},s.length<5&&"+ Upload"))};return n.createElement(d)}}},4618:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","progress"]," 属性自定义进度条样式。"]],"en-US":[["p","Use ",["code","progress"]," for customize progress bar."]]},meta:{order:15,title:{"zh-CN":"自定义进度条样式","en-US":"Customize Progress Bar"},filename:"components/upload/demo/customize-progress-bar.md",id:"components-upload-demo-customize-progress-bar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  headers<span class="token punctuation">:</span> {\n    authorization<span class="token punctuation">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span>\n  progress<span class="token punctuation">:</span> {\n    strokeColor<span class="token punctuation">:</span> {\n      <span class="token string">\'0%\'</span><span class="token punctuation">:</span> <span class="token string">\'#108ee9\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'100%\'</span><span class="token punctuation">:</span> <span class="token string">\'#87d068\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    strokeWidth<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    format<span class="token punctuation">:</span> percent <span class="token operator">=</span><span class="token operator">></span> percent <span class="token operator">&amp;</span><span class="token operator">&amp;</span> `${<span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>}%`<span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    authorization<span class="token operator">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  progress<span class="token operator">:</span> <span class="token punctuation">{</span>\n    strokeColor<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'0%\'</span><span class="token operator">:</span> <span class="token string">\'#108ee9\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'100%\'</span><span class="token operator">:</span> <span class="token string">\'#87d068\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    strokeWidth<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">format</span><span class="token operator">:</span> percent <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">strokeColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'0%\'</span><span class="token operator">:</span> <span class="token string">\'#108ee9\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'100%\'</span><span class="token operator">:</span> <span class="token string">\'#87d068\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">strokeWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">format</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">percent</span><span class="token punctuation">)</span> <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(n){"uploading"!==n.file.status&&console.log(n.file,n.fileList),"done"===n.file.status?o.message.success("".concat(n.file.name," file uploaded successfully")):"error"===n.file.status&&o.message.error("".concat(n.file.name," file upload failed."))},progress:{strokeColor:{"0%":"#108ee9","100%":"#87d068"},strokeWidth:3,format:function(n){return n&&"".concat(parseFloat(n.toFixed(2)),"%")}}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Click to Upload"))};return n.createElement(l)}}},4619:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","defaultFileList"]," 设置已上传的内容。"]],"en-US":[["p","Use ",["code","defaultFileList"]," for uploaded files when page init."]]},meta:{order:2,title:{"zh-CN":"已上传的文件列表","en-US":"Default Files"},filename:"components/upload/demo/defaultFileList.md",id:"components-upload-demo-defaultFileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span>\n  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      response<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      response<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      response<span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      response<span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// custom error message to show</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// custom error message to show</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(n){var s=n.file,a=n.fileList;"uploading"!==s.status&&console.log(s,a)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}]},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload"))};return n.createElement(l)}}},4620:function(n,s,a){n.exports={content:{"zh-CN":[["p","支持上传一个文件夹里的所有文件。"]],"en-US":[["p","You can select and upload a whole directory."]]},meta:{order:6,title:{"zh-CN":"文件夹上传","en-US":"Upload directory"},filename:"components/upload/demo/directory.md",id:"components-upload-demo-directory"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span> directory<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload Directory<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c=function(){return e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",directory:!0},e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload Directory"))};return n.createElement(c)}}},4621:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","itemRender"]," ，我们可以集成 react-dnd 来实现对上传列表拖拽排序。"]],"en-US":[["p","By using ",["code","itemRender"],", we can integrate upload with react-dnd to implement drag sorting of uploadList."]]},meta:{order:13,title:{"zh-CN":"上传列表拖拽排序","en-US":"Drag sorting of uploadList"},filename:"components/upload/demo/drag-sorting.md",id:"components-upload-demo-drag-sorting"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport update from <span class="token string">\'immutability-helper\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport { DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop } from <span class="token string">\'react-dnd\'</span><span class="token comment" spellcheck="true">;</span>\nimport { HTML5Backend } from <span class="token string">\'react-dnd-html5-backend\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">\'DragableUploadList\'</span><span class="token comment" spellcheck="true">;</span>\n\ninterface DragableUploadListItemProps {\n  originNode<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string | React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n  file<span class="token punctuation">:</span> UploadFile<span class="token comment" spellcheck="true">;</span>\n  fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n  moveRow<span class="token punctuation">:</span> <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> DragableUploadListItem <span class="token operator">=</span> <span class="token punctuation">(</span>{\n  originNode<span class="token punctuation">,</span>\n  moveRow<span class="token punctuation">,</span>\n  file<span class="token punctuation">,</span>\n  fileList<span class="token punctuation">,</span>\n}<span class="token punctuation">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>{ isOver<span class="token punctuation">,</span> dropClassName }<span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span>{\n    accept<span class="token punctuation">:</span> type<span class="token punctuation">,</span>\n    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">const</span> { index<span class="token punctuation">:</span> dragIndex } <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> || {}<span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">==</span><span class="token operator">=</span> index<span class="token punctuation">)</span> {\n        return {}<span class="token comment" spellcheck="true">;</span>\n      }\n      return {\n        isOver<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        dropClassName<span class="token punctuation">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">\' drop-over-downward\'</span> <span class="token punctuation">:</span> <span class="token string">\' drop-over-upward\'</span><span class="token punctuation">,</span>\n      }<span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span>\n    drop<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span>{\n    type<span class="token punctuation">,</span>\n    item<span class="token punctuation">:</span> { index }<span class="token punctuation">,</span>\n    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n      isDragging<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token operator">&lt;</span>Tooltip title<span class="token operator">=</span><span class="token string">"Upload Error"</span><span class="token operator">></span>{originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children}<span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div\n      ref<span class="token operator">=</span>{ref}\n      className<span class="token operator">=</span>{`ant<span class="token operator">-</span>upload<span class="token operator">-</span>draggable<span class="token operator">-</span>list<span class="token operator">-</span>item ${isOver <span class="token operator">?</span> dropClassName <span class="token punctuation">:</span> <span class="token string">\'\'</span>}`}\n      style<span class="token operator">=</span>{{ cursor<span class="token punctuation">:</span> <span class="token string">\'move\'</span> }}\n    <span class="token operator">></span>\n      {file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'error\'</span> <span class="token operator">?</span> errorNode <span class="token punctuation">:</span> originNode}\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image1.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image2.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image3.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image4.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>\n        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> {\n          <span class="token variable">$splice</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>DndProvider backend<span class="token operator">=</span>{HTML5Backend}<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Upload\n        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n        fileList<span class="token operator">=</span>{fileList}\n        onChange<span class="token operator">=</span>{onChange}\n        itemRender<span class="token operator">=</span>{<span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>DragableUploadListItem\n            originNode<span class="token operator">=</span>{originNode}\n            file<span class="token operator">=</span>{file}\n            fileList<span class="token operator">=</span>{currFileList}\n            moveRow<span class="token operator">=</span>{moveRow}\n          <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token punctuation">)</span>}\n      <span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>DndProvider<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">\'immutability-helper\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd-html5-backend\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">\'DragableUploadList\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">DragableUploadListItemProps</span> <span class="token punctuation">{</span>\n  originNode<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string <span class="token operator">|</span> React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">>></span><span class="token punctuation">;</span>\n  file<span class="token operator">:</span> UploadFile<span class="token punctuation">;</span>\n  fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">moveRow</span><span class="token operator">:</span> <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  originNode<span class="token punctuation">,</span>\n  moveRow<span class="token punctuation">,</span>\n  file<span class="token punctuation">,</span>\n  fileList<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token operator">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    accept<span class="token operator">:</span> type<span class="token punctuation">,</span>\n    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        isOver<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        dropClassName<span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">\' drop-over-downward\'</span> <span class="token operator">:</span> <span class="token string">\' drop-over-upward\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    type<span class="token punctuation">,</span>\n    item<span class="token operator">:</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n      isDragging<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>\n      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> cursor<span class="token operator">:</span> <span class="token string">\'move\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image1.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image2.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image3.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image4.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>\n        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          $splice<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>\n            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>\n            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>\n            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>\n            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">\'immutability-helper\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd-html5-backend\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">\'DragableUploadList\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> originNode<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">accept</span><span class="token operator">:</span> type<span class="token punctuation">,</span>\n    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">index</span><span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">isOver</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">dropClassName</span><span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">\' drop-over-downward\'</span> <span class="token operator">:</span> <span class="token string">\' drop-over-upward\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    type<span class="token punctuation">,</span>\n    <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      index<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">isDragging</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>\n      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">\'move\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image1.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image2.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image3.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image4.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token parameter">dragIndex<span class="token punctuation">,</span> hoverIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>\n        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">$splice</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>\n            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>\n            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>\n            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>\n            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p,o=a(65),e=a(17),c=(p=a(3806))&&p.__esModule?p:{default:p},l=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=k(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var c=o?Object.getOwnPropertyDescriptor(n,e):null;c&&(c.get||c.set)?Object.defineProperty(p,e,c):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0)),u=a(3807),i=a(3808);function k(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(k=function(n){return n?a:s})(n)}function r(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return d(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return d(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var m="DragableUploadList",g=function(n){var s=n.originNode,a=n.moveRow,t=n.file,p=n.fileList,o=(0,l.useRef)(null),c=p.indexOf(t),i=r((0,u.useDrop)({accept:m,collect:function(n){var s=(n.getItem()||{}).index;return s===c?{}:{isOver:n.isOver(),dropClassName:s<c?" drop-over-downward":" drop-over-upward"}},drop:function(n){a(n.index,c)}}),2),k=i[0],d=k.isOver,g=k.dropClassName;(0,i[1])((0,r((0,u.useDrag)({type:m,item:{index:c},collect:function(n){return{isDragging:n.isDragging()}}}),2)[1])(o));var f=l.default.createElement(e.Tooltip,{title:"Upload Error"},s.props.children);return l.default.createElement("div",{ref:o,className:"ant-upload-draggable-list-item ".concat(d?g:""),style:{cursor:"move"}},"error"===t.status?f:s)},f=function(){var n=r((0,l.useState)([{uid:"-1",name:"image1.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image2.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image3.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image4.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),2),s=n[0],a=n[1],t=(0,l.useCallback)((function(n,t){var p=s[n];a((0,c.default)(s,{$splice:[[n,1],[t,0,p]]}))}),[s]);return l.default.createElement(u.DndProvider,{backend:i.HTML5Backend},l.default.createElement(e.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",fileList:s,onChange:function(n){var s=n.fileList;a(s)},itemRender:function(n,s,a){return l.default.createElement(g,{originNode:n,file:s,fileList:a,moveRow:t})}},l.default.createElement(e.Button,{icon:l.default.createElement(o.UploadOutlined,null)},"Click to Upload")))};return n.createElement(f)},style:"#components-upload-demo-drag-sorting .ant-upload-draggable-list-item {\n  border-top: 2px dashed rgba(0, 0, 0, 0);\n  border-bottom: 2px dashed rgba(0, 0, 0, 0);\n}\n#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-downward {\n  border-bottom-color: #1890ff;\n}\n#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-upward {\n  border-top-color: #1890ff;\n}",highlightedStyle:'<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item</span> </span><span class="token punctuation">{</span>\n  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-downward</span> </span><span class="token punctuation">{</span>\n  <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-upward</span> </span><span class="token punctuation">{</span>\n  <span class="token property">border-top-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},4622:function(n,s,a){n.exports={content:{"zh-CN":[["p","把文件拖入指定区域，完成上传，同样支持点击上传。"],["p","设置 ",["code","multiple"]," 后，在 ",["code","IE10+"]," 可以一次上传多个文件。"]],"en-US":[["p","You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."],["p","We can upload serveral files at once in modern browsers by giving the input the ",["code","multiple"]," attribute."]]},meta:{order:5,title:{"zh-CN":"拖拽上传","en-US":"Drag and Drop"},filename:"components/upload/demo/drag.md",id:"components-upload-demo-drag"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { InboxOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> { Dragger } <span class="token operator">=</span> Upload<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {\n    <span class="token keyword">const</span> { status } <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status !<span class="token operator">==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully<span class="token punctuation">.</span>`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>`${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span>\n  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Dropped files\'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Dragger {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-drag-icon"</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>InboxOutlined <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-text"</span><span class="token operator">></span>Click <span class="token operator">or</span> drag file <span class="token keyword">to</span> this area <span class="token keyword">to</span> upload<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-hint"</span><span class="token operator">></span>\n      Support <span class="token keyword">for</span> a single <span class="token operator">or</span> bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data <span class="token operator">or</span> other\n      band files\n    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Dragger<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Dropped files\'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other\n      band files\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onDrop</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Dropped files\'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other\n      band files\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c=o.Upload.Dragger,l={name:"file",multiple:!0,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(n){var s=n.file.status;"uploading"!==s&&console.log(n.file,n.fileList),"done"===s?o.message.success("".concat(n.file.name," file uploaded successfully.")):"error"===s&&o.message.error("".concat(n.file.name," file upload failed."))},onDrop:function(n){console.log("Dropped files",n.dataTransfer.files)}},u=function(){return e.default.createElement(c,l,e.default.createElement("p",{className:"ant-upload-drag-icon"},e.default.createElement(p.InboxOutlined,null)),e.default.createElement("p",{className:"ant-upload-text"},"Click or drag file to this area to upload"),e.default.createElement("p",{className:"ant-upload-hint"},"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files"))};return n.createElement(u)}}},4623:function(n,s,a){n.exports={content:{"zh-CN":[["p","根据类型默认显示对应 icon"]],"en-US":[["p","Displays the corresponding by default by type icon"]]},meta:{order:12,debug:!0,title:{"zh-CN":"自定义显示 icon","en-US":"custom show icon"},filename:"components/upload/demo/file-type.md",id:"components-upload-demo-file-type"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import {\n  FileExcelTwoTone<span class="token punctuation">,</span>\n  FilePdfTwoTone<span class="token punctuation">,</span>\n  FileWordTwoTone<span class="token punctuation">,</span>\n  LoadingOutlined<span class="token punctuation">,</span>\n  PaperClipOutlined<span class="token punctuation">,</span>\n  PictureTwoTone<span class="token punctuation">,</span>\n  PlusOutlined<span class="token punctuation">,</span>\n} from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>\n  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-6\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleIconRender<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'iconRender\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>\n      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FilePdfTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.pdf\'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>\n      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileExcelTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.xlsx\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>\n      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileWordTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.docx\'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>\n      {\n        type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>PictureTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n        suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.webp\'</span><span class="token punctuation">,</span> <span class="token string">\'.svg\'</span><span class="token punctuation">,</span> <span class="token string">\'.png\'</span><span class="token punctuation">,</span> <span class="token string">\'.gif\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpeg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jfif\'</span><span class="token punctuation">,</span> <span class="token string">\'.bmp\'</span><span class="token punctuation">,</span> <span class="token string">\'.dpg\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    let icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'uploading\'</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PaperClipOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'picture\'</span> || listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'picture-card\'</span><span class="token punctuation">)</span> {\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'picture-card\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n        icon <span class="token operator">=</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">; // or icon = \'uploading...\';</span>\n      } <span class="token keyword">else</span> {\n        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> {\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token comment" spellcheck="true">;</span>\n          }\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }\n    }\n    return icon<span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;></span>\n      <span class="token operator">&lt;</span>Upload\n        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>\n        fileList<span class="token operator">=</span>{fileList}\n        onPreview<span class="token operator">=</span>{handlePreview}\n        onChange<span class="token operator">=</span>{handleChange}\n        iconRender<span class="token operator">=</span>{handleIconRender}\n      <span class="token operator">></span>\n        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewVisible} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>\n        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  FileExcelTwoTone<span class="token punctuation">,</span>\n  FilePdfTwoTone<span class="token punctuation">,</span>\n  FileWordTwoTone<span class="token punctuation">,</span>\n  LoadingOutlined<span class="token punctuation">,</span>\n  PaperClipOutlined<span class="token punctuation">,</span>\n  PictureTwoTone<span class="token punctuation">,</span>\n  PlusOutlined<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>\n  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-6\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleIconRender<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'iconRender\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.pdf\'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.xlsx\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.docx\'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.webp\'</span><span class="token punctuation">,</span> <span class="token string">\'.svg\'</span><span class="token punctuation">,</span> <span class="token string">\'.png\'</span><span class="token punctuation">,</span> <span class="token string">\'.gif\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpeg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jfif\'</span><span class="token punctuation">,</span> <span class="token string">\'.bmp\'</span><span class="token punctuation">,</span> <span class="token string">\'.dpg\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// console.log(1, file, listType);</span>\n    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">\'picture\'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">\'picture-card\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">\'picture-card\'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = \'uploading...\';</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  FileExcelTwoTone<span class="token punctuation">,</span>\n  FilePdfTwoTone<span class="token punctuation">,</span>\n  FileWordTwoTone<span class="token punctuation">,</span>\n  LoadingOutlined<span class="token punctuation">,</span>\n  PaperClipOutlined<span class="token punctuation">,</span>\n  PictureTwoTone<span class="token punctuation">,</span>\n  PlusOutlined<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'pdf.pdf\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-6\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'doc.doc\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleIconRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> listType</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.pdf\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.xlsx\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.docx\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.webp\'</span><span class="token punctuation">,</span> <span class="token string">\'.svg\'</span><span class="token punctuation">,</span> <span class="token string">\'.png\'</span><span class="token punctuation">,</span> <span class="token string">\'.gif\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jpeg\'</span><span class="token punctuation">,</span> <span class="token string">\'.jfif\'</span><span class="token punctuation">,</span> <span class="token string">\'.bmp\'</span><span class="token punctuation">,</span> <span class="token string">\'.dpg\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// console.log(1, file, listType);</span>\n    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">\'picture\'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">\'picture-card\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">\'picture-card\'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = \'uploading...\';</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        Upload\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */l=function(){return s};var n,s={},a=Object.prototype,p=a.hasOwnProperty,o=Object.defineProperty||function(n,s,a){n[s]=a.value},e="function"==typeof Symbol?Symbol:{},c=e.iterator||"@@iterator",u=e.asyncIterator||"@@asyncIterator",i=e.toStringTag||"@@toStringTag";function k(n,s,a){return Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}),n[s]}try{k({},"")}catch(n){k=function(n,s,a){return n[s]=a}}function r(n,s,a,t){var p=s&&s.prototype instanceof h?s:h,e=Object.create(p.prototype),c=new E(t||[]);return o(e,"_invoke",{value:P(n,a,c)}),e}function d(n,s,a){try{return{type:"normal",arg:n.call(s,a)}}catch(n){return{type:"throw",arg:n}}}s.wrap=r;var m="suspendedStart",g="executing",f="completed",y={};function h(){}function w(){}function v(){}var b={};k(b,c,(function(){return this}));var U=Object.getPrototypeOf,x=U&&U(U(R([])));x&&x!==a&&p.call(x,c)&&(b=x);var j=v.prototype=h.prototype=Object.create(b);function L(n){["next","throw","return"].forEach((function(s){k(n,s,(function(n){return this._invoke(s,n)}))}))}function S(n,s){function a(o,e,c,l){var u=d(n[o],n,e);if("throw"!==u.type){var i=u.arg,k=i.value;return k&&"object"==t(k)&&p.call(k,"__await")?s.resolve(k.__await).then((function(n){a("next",n,c,l)}),(function(n){a("throw",n,c,l)})):s.resolve(k).then((function(n){i.value=n,c(i)}),(function(n){return a("throw",n,c,l)}))}l(u.arg)}var e;o(this,"_invoke",{value:function(n,t){function p(){return new s((function(s,p){a(n,t,s,p)}))}return e=e?e.then(p,p):p()}})}function P(s,a,t){var p=m;return function(o,e){if(p===g)throw Error("Generator is already running");if(p===f){if("throw"===o)throw e;return{value:n,done:!0}}for(t.method=o,t.arg=e;;){var c=t.delegate;if(c){var l=O(c,t);if(l){if(l===y)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(p===m)throw p=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);p=g;var u=d(s,a,t);if("normal"===u.type){if(p=t.done?f:"suspendedYield",u.arg===y)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(p=f,t.method="throw",t.arg=u.arg)}}}function O(s,a){var t=a.method,p=s.iterator[t];if(p===n)return a.delegate=null,"throw"===t&&s.iterator.return&&(a.method="return",a.arg=n,O(s,a),"throw"===a.method)||"return"!==t&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+t+"' method")),y;var o=d(p,s.iterator,a.arg);if("throw"===o.type)return a.method="throw",a.arg=o.arg,a.delegate=null,y;var e=o.arg;return e?e.done?(a[s.resultName]=e.value,a.next=s.nextLoc,"return"!==a.method&&(a.method="next",a.arg=n),a.delegate=null,y):e:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,y)}function C(n){var s={tryLoc:n[0]};1 in n&&(s.catchLoc=n[1]),2 in n&&(s.finallyLoc=n[2],s.afterLoc=n[3]),this.tryEntries.push(s)}function F(n){var s=n.completion||{};s.type="normal",delete s.arg,n.completion=s}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(C,this),this.reset(!0)}function R(s){if(s||""===s){var a=s[c];if(a)return a.call(s);if("function"==typeof s.next)return s;if(!isNaN(s.length)){var o=-1,e=function a(){for(;++o<s.length;)if(p.call(s,o))return a.value=s[o],a.done=!1,a;return a.value=n,a.done=!0,a};return e.next=e}}throw new TypeError(t(s)+" is not iterable")}return w.prototype=v,o(j,"constructor",{value:v,configurable:!0}),o(v,"constructor",{value:w,configurable:!0}),w.displayName=k(v,i,"GeneratorFunction"),s.isGeneratorFunction=function(n){var s="function"==typeof n&&n.constructor;return!!s&&(s===w||"GeneratorFunction"===(s.displayName||s.name))},s.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,v):(n.__proto__=v,k(n,i,"GeneratorFunction")),n.prototype=Object.create(j),n},s.awrap=function(n){return{__await:n}},L(S.prototype),k(S.prototype,u,(function(){return this})),s.AsyncIterator=S,s.async=function(n,a,t,p,o){void 0===o&&(o=Promise);var e=new S(r(n,a,t,p),o);return s.isGeneratorFunction(a)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},L(j),k(j,i,"Generator"),k(j,c,(function(){return this})),k(j,"toString",(function(){return"[object Generator]"})),s.keys=function(n){var s=Object(n),a=[];for(var t in s)a.push(t);return a.reverse(),function n(){for(;a.length;){var t=a.pop();if(t in s)return n.value=t,n.done=!1,n}return n.done=!0,n}},s.values=R,E.prototype={constructor:E,reset:function(s){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(F),!s)for(var a in this)"t"===a.charAt(0)&&p.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=n)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(s){if(this.done)throw s;var a=this;function t(t,p){return c.type="throw",c.arg=s,a.next=t,p&&(a.method="next",a.arg=n),!!p}for(var o=this.tryEntries.length-1;o>=0;--o){var e=this.tryEntries[o],c=e.completion;if("root"===e.tryLoc)return t("end");if(e.tryLoc<=this.prev){var l=p.call(e,"catchLoc"),u=p.call(e,"finallyLoc");if(l&&u){if(this.prev<e.catchLoc)return t(e.catchLoc,!0);if(this.prev<e.finallyLoc)return t(e.finallyLoc)}else if(l){if(this.prev<e.catchLoc)return t(e.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<e.finallyLoc)return t(e.finallyLoc)}}}},abrupt:function(n,s){for(var a=this.tryEntries.length-1;a>=0;--a){var t=this.tryEntries[a];if(t.tryLoc<=this.prev&&p.call(t,"finallyLoc")&&this.prev<t.finallyLoc){var o=t;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=s&&s<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=s,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(e)},complete:function(n,s){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&s&&(this.next=s),y},finish:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.finallyLoc===n)return this.complete(a.completion,a.afterLoc),F(a),y}},catch:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.tryLoc===n){var t=a.completion;if("throw"===t.type){var p=t.arg;F(a)}return p}}throw Error("illegal catch attempt")},delegateYield:function(s,a,t){return this.delegate={iterator:R(s),resultName:a,nextLoc:t},"next"===this.method&&(this.arg=n),y}},s}function u(n,s,a,t,p,o,e){try{var c=n[o](e),l=c.value}catch(n){return void a(n)}c.done?s(l):Promise.resolve(l).then(t,p)}function i(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return k(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var r=function(n){return new Promise((function(s,a){var t=new FileReader;t.readAsDataURL(n),t.onload=function(){return s(t.result)},t.onerror=function(n){return a(n)}}))},d=function(){var n=i((0,e.useState)(!1),2),s=n[0],a=n[1],t=i((0,e.useState)(""),2),c=t[0],k=t[1],d=i((0,e.useState)([{uid:"-2",name:"pdf.pdf",status:"done",url:"http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf"},{uid:"-3",name:"doc.doc",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc"},{uid:"-4",name:"image.png",status:"error"},{uid:"-5",name:"pdf.pdf",status:"error"},{uid:"-6",name:"doc.doc",status:"error"}]),2),m=d[0],g=d[1],f=function(){var n,s=(n=l().mark((function n(s){return l().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(s.url||s.preview){n.next=4;break}return n.next=3,r(s.originFileObj);case 3:s.preview=n.sent;case 4:a(!0),k(s.url||s.preview);case 6:case"end":return n.stop()}}),n)})),function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){u(o,t,p,e,c,"next",n)}function c(n){u(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n){return s.apply(this,arguments)}}(),y=e.default.createElement("div",null,e.default.createElement(p.PlusOutlined,null),e.default.createElement("div",{style:{marginTop:8}},"Upload"));return e.default.createElement(e.default.Fragment,null,e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:m,onPreview:f,onChange:function(n){var s=n.fileList;return g(s)},iconRender:function(n,s){var a=[{type:e.default.createElement(p.FilePdfTwoTone,null),suf:[".pdf"]},{type:e.default.createElement(p.FileExcelTwoTone,null),suf:[".xlsx",".xls",".csv"]},{type:e.default.createElement(p.FileWordTwoTone,null),suf:[".doc",".docx"]},{type:e.default.createElement(p.PictureTwoTone,null),suf:[".webp",".svg",".png",".gif",".jpg",".jpeg",".jfif",".bmp",".dpg"]}],t="uploading"===n.status?e.default.createElement(p.LoadingOutlined,null):e.default.createElement(p.PaperClipOutlined,null);return"picture"!==s&&"picture-card"!==s||("picture-card"===s&&"uploading"===n.status?t=e.default.createElement(p.LoadingOutlined,null):a.forEach((function(s){s.suf.includes(n.name.slice(n.name.lastIndexOf(".")))&&(t=s.type)}))),t}},m.length>=8?null:y),e.default.createElement(o.Modal,{open:s,footer:null,onCancel:function(){return a(!1)}},e.default.createElement("img",{alt:"example",style:{width:"100%"},src:c})))};return n.createElement(d)}}},4624:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","fileList"]," 对列表进行完全控制，可以实现各种自定义功能，以下演示二种情况："],["ol",["li",["p","上传列表数量的限制。"]],["li",["p","读取远程路径并显示链接。"]]]],"en-US":[["p","You can gain full control over filelist by configuring ",["code","fileList"],". You can accomplish all kinds of customed functions. The following shows two circumstances:"],["ol",["li",["p","limit the number of uploaded files."]],["li",["p","read from response and show file link."]]]]},meta:{order:4,title:{"zh-CN":"完全控制的上传列表","en-US":"Complete control over file list"},filename:"components/upload/demo/fileList.md",id:"components-upload-demo-fileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadFile } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=</span><span class="token operator">></span> {\n    let newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">.</span> Limit the number of uploaded files\n    <span class="token operator">/</span><span class="token operator">/</span> Only <span class="token keyword">to</span> show two recent uploaded files<span class="token punctuation">,</span> <span class="token operator">and</span> old ones will be replaced by the new\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span> Read from response <span class="token operator">and</span> show file link\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> {\n        <span class="token operator">/</span><span class="token operator">/</span> Component will show file<span class="token punctuation">.</span>url as link\n        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token comment" spellcheck="true">;</span>\n      }\n      return file<span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> props <span class="token operator">=</span> {\n    action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>\n    multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} fileList<span class="token operator">=</span>{fileList}<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 1. Limit the number of uploaded files</span>\n    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 2. Read from response and show file link</span>\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Component will show file.url as link</span>\n        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> file<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n    action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n    multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 1. Limit the number of uploaded files</span>\n    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 2. Read from response and show file link</span>\n    newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Component will show file.url as link</span>\n        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> file<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n    <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(){return(l=Object.assign?Object.assign.bind():function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function u(n){return function(n){if(Array.isArray(n))return r(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||k(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||k(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){if(n){if("string"==typeof n)return r(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?r(n,s):void 0}}function r(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var d=function(){var n=i((0,e.useState)([{uid:"-1",name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]),2),s=n[0],a=n[1],t={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(n){var t=u(n.fileList);s.slice(-2),t=s.map((function(n){return n.response&&(n.url=n.response.url),n})),a(t)},multiple:!0};return e.default.createElement(o.Upload,l({},t,{fileList:s}),e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload"))};return n.createElement(d)}}},4625:function(n,s,a){n.exports={content:{"zh-CN":[["p","通过 ",["code","maxCount"]," 限制上传数量。当为 ",["code","1"]," 时，始终用最新上传的代替当前。"]],"en-US":[["p","Limit files with ",["code","maxCount"],". Will replace current one when ",["code","maxCount"]," is ",["code","1"],"."]]},meta:{order:10,title:{"zh-CN":"限制数量","en-US":"Max Count"},filename:"components/upload/demo/max-count.md",id:"components-upload-demo-max-count"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Space direction<span class="token operator">=</span><span class="token string">"vertical"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> }} size<span class="token operator">=</span><span class="token string">"large"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>Upload\n      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n      listType<span class="token operator">=</span><span class="token string">"picture"</span>\n      maxCount<span class="token operator">=</span>{<span class="token number">1</span>}\n    <span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Upload\n      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n      listType<span class="token operator">=</span><span class="token string">"picture"</span>\n      maxCount<span class="token operator">=</span>{<span class="token number">3</span>}\n      multiple\n    <span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">multiple</span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span>\n    <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>\n    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">multiple</span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c=function(){return e.default.createElement(o.Space,{direction:"vertical",style:{width:"100%"},size:"large"},e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:1},e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload (Max: 1)")),e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:3,multiple:!0},e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload (Max: 3)")))};return n.createElement(c)}}},4626:function(n,s,a){n.exports={content:{"zh-CN":[["p","用户可以上传图片并在列表中显示缩略图。当上传照片数到达限制后，上传按钮消失。"]],"en-US":[["p","After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."]]},meta:{order:3,title:{"zh-CN":"照片墙","en-US":"Pictures Wall"},filename:"components/upload/demo/picture-card.md",id:"components-upload-demo-picture-card"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { PlusOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { RcFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadFile } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>\n  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-xxx\'</span><span class="token punctuation">,</span>\n      percent<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'uploading\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name || file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;></span>\n      <span class="token operator">&lt;</span>Upload\n        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>\n        fileList<span class="token operator">=</span>{fileList}\n        onPreview<span class="token operator">=</span>{handlePreview}\n        onChange<span class="token operator">=</span>{handleChange}\n      <span class="token operator">></span>\n        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewVisible} title<span class="token operator">=</span>{previewTitle} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>\n        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>\n  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-xxx\'</span><span class="token punctuation">,</span>\n      percent<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'uploading\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewVisible<span class="token punctuation">,</span> setPreviewVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-4\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-xxx\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">percent</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'uploading\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-5\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'image.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        Upload\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */l=function(){return s};var n,s={},a=Object.prototype,p=a.hasOwnProperty,o=Object.defineProperty||function(n,s,a){n[s]=a.value},e="function"==typeof Symbol?Symbol:{},c=e.iterator||"@@iterator",u=e.asyncIterator||"@@asyncIterator",i=e.toStringTag||"@@toStringTag";function k(n,s,a){return Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}),n[s]}try{k({},"")}catch(n){k=function(n,s,a){return n[s]=a}}function r(n,s,a,t){var p=s&&s.prototype instanceof h?s:h,e=Object.create(p.prototype),c=new E(t||[]);return o(e,"_invoke",{value:P(n,a,c)}),e}function d(n,s,a){try{return{type:"normal",arg:n.call(s,a)}}catch(n){return{type:"throw",arg:n}}}s.wrap=r;var m="suspendedStart",g="executing",f="completed",y={};function h(){}function w(){}function v(){}var b={};k(b,c,(function(){return this}));var U=Object.getPrototypeOf,x=U&&U(U(R([])));x&&x!==a&&p.call(x,c)&&(b=x);var j=v.prototype=h.prototype=Object.create(b);function L(n){["next","throw","return"].forEach((function(s){k(n,s,(function(n){return this._invoke(s,n)}))}))}function S(n,s){function a(o,e,c,l){var u=d(n[o],n,e);if("throw"!==u.type){var i=u.arg,k=i.value;return k&&"object"==t(k)&&p.call(k,"__await")?s.resolve(k.__await).then((function(n){a("next",n,c,l)}),(function(n){a("throw",n,c,l)})):s.resolve(k).then((function(n){i.value=n,c(i)}),(function(n){return a("throw",n,c,l)}))}l(u.arg)}var e;o(this,"_invoke",{value:function(n,t){function p(){return new s((function(s,p){a(n,t,s,p)}))}return e=e?e.then(p,p):p()}})}function P(s,a,t){var p=m;return function(o,e){if(p===g)throw Error("Generator is already running");if(p===f){if("throw"===o)throw e;return{value:n,done:!0}}for(t.method=o,t.arg=e;;){var c=t.delegate;if(c){var l=O(c,t);if(l){if(l===y)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(p===m)throw p=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);p=g;var u=d(s,a,t);if("normal"===u.type){if(p=t.done?f:"suspendedYield",u.arg===y)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(p=f,t.method="throw",t.arg=u.arg)}}}function O(s,a){var t=a.method,p=s.iterator[t];if(p===n)return a.delegate=null,"throw"===t&&s.iterator.return&&(a.method="return",a.arg=n,O(s,a),"throw"===a.method)||"return"!==t&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+t+"' method")),y;var o=d(p,s.iterator,a.arg);if("throw"===o.type)return a.method="throw",a.arg=o.arg,a.delegate=null,y;var e=o.arg;return e?e.done?(a[s.resultName]=e.value,a.next=s.nextLoc,"return"!==a.method&&(a.method="next",a.arg=n),a.delegate=null,y):e:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,y)}function C(n){var s={tryLoc:n[0]};1 in n&&(s.catchLoc=n[1]),2 in n&&(s.finallyLoc=n[2],s.afterLoc=n[3]),this.tryEntries.push(s)}function F(n){var s=n.completion||{};s.type="normal",delete s.arg,n.completion=s}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(C,this),this.reset(!0)}function R(s){if(s||""===s){var a=s[c];if(a)return a.call(s);if("function"==typeof s.next)return s;if(!isNaN(s.length)){var o=-1,e=function a(){for(;++o<s.length;)if(p.call(s,o))return a.value=s[o],a.done=!1,a;return a.value=n,a.done=!0,a};return e.next=e}}throw new TypeError(t(s)+" is not iterable")}return w.prototype=v,o(j,"constructor",{value:v,configurable:!0}),o(v,"constructor",{value:w,configurable:!0}),w.displayName=k(v,i,"GeneratorFunction"),s.isGeneratorFunction=function(n){var s="function"==typeof n&&n.constructor;return!!s&&(s===w||"GeneratorFunction"===(s.displayName||s.name))},s.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,v):(n.__proto__=v,k(n,i,"GeneratorFunction")),n.prototype=Object.create(j),n},s.awrap=function(n){return{__await:n}},L(S.prototype),k(S.prototype,u,(function(){return this})),s.AsyncIterator=S,s.async=function(n,a,t,p,o){void 0===o&&(o=Promise);var e=new S(r(n,a,t,p),o);return s.isGeneratorFunction(a)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},L(j),k(j,i,"Generator"),k(j,c,(function(){return this})),k(j,"toString",(function(){return"[object Generator]"})),s.keys=function(n){var s=Object(n),a=[];for(var t in s)a.push(t);return a.reverse(),function n(){for(;a.length;){var t=a.pop();if(t in s)return n.value=t,n.done=!1,n}return n.done=!0,n}},s.values=R,E.prototype={constructor:E,reset:function(s){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(F),!s)for(var a in this)"t"===a.charAt(0)&&p.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=n)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(s){if(this.done)throw s;var a=this;function t(t,p){return c.type="throw",c.arg=s,a.next=t,p&&(a.method="next",a.arg=n),!!p}for(var o=this.tryEntries.length-1;o>=0;--o){var e=this.tryEntries[o],c=e.completion;if("root"===e.tryLoc)return t("end");if(e.tryLoc<=this.prev){var l=p.call(e,"catchLoc"),u=p.call(e,"finallyLoc");if(l&&u){if(this.prev<e.catchLoc)return t(e.catchLoc,!0);if(this.prev<e.finallyLoc)return t(e.finallyLoc)}else if(l){if(this.prev<e.catchLoc)return t(e.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<e.finallyLoc)return t(e.finallyLoc)}}}},abrupt:function(n,s){for(var a=this.tryEntries.length-1;a>=0;--a){var t=this.tryEntries[a];if(t.tryLoc<=this.prev&&p.call(t,"finallyLoc")&&this.prev<t.finallyLoc){var o=t;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=s&&s<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=s,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(e)},complete:function(n,s){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&s&&(this.next=s),y},finish:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.finallyLoc===n)return this.complete(a.completion,a.afterLoc),F(a),y}},catch:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.tryLoc===n){var t=a.completion;if("throw"===t.type){var p=t.arg;F(a)}return p}}throw Error("illegal catch attempt")},delegateYield:function(s,a,t){return this.delegate={iterator:R(s),resultName:a,nextLoc:t},"next"===this.method&&(this.arg=n),y}},s}function u(n,s,a,t,p,o,e){try{var c=n[o](e),l=c.value}catch(n){return void a(n)}c.done?s(l):Promise.resolve(l).then(t,p)}function i(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return k(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var r=function(n){return new Promise((function(s,a){var t=new FileReader;t.readAsDataURL(n),t.onload=function(){return s(t.result)},t.onerror=function(n){return a(n)}}))},d=function(){var n=i((0,e.useState)(!1),2),s=n[0],a=n[1],t=i((0,e.useState)(""),2),c=t[0],k=t[1],d=i((0,e.useState)(""),2),m=d[0],g=d[1],f=i((0,e.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-xxx",percent:50,name:"image.png",status:"uploading",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),2),y=f[0],h=f[1],w=function(){var n,s=(n=l().mark((function n(s){return l().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(s.url||s.preview){n.next=4;break}return n.next=3,r(s.originFileObj);case 3:s.preview=n.sent;case 4:k(s.url||s.preview),a(!0),g(s.name||s.url.substring(s.url.lastIndexOf("/")+1));case 7:case"end":return n.stop()}}),n)})),function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){u(o,t,p,e,c,"next",n)}function c(n){u(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n){return s.apply(this,arguments)}}(),v=e.default.createElement("div",null,e.default.createElement(p.PlusOutlined,null),e.default.createElement("div",{style:{marginTop:8}},"Upload"));return e.default.createElement(e.default.Fragment,null,e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:y,onPreview:w,onChange:function(n){var s=n.fileList;return h(s)}},y.length>=8?null:v),e.default.createElement(o.Modal,{open:s,title:m,footer:null,onCancel:function(){return a(!1)}},e.default.createElement("img",{alt:"example",style:{width:"100%"},src:c})))};return n.createElement(d)}}},4627:function(n,s,a){n.exports={content:{"zh-CN":[["p","上传文件为图片，可展示本地缩略图。",["code","IE8/9"]," 不支持浏览器本地缩略图展示（",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"Ref"],"），可以写 ",["code","thumbUrl"]," 属性来代替。"]],"en-US":[["p","If uploaded file is a picture, the thumbnail can be shown. ",["code","IE8/9"]," do not support local thumbnail show. Please use ",["code","thumbUrl"]," instead."]]},meta:{order:8,title:{"zh-CN":"图片列表样式","en-US":"Pictures with list style"},filename:"components/upload/demo/picture-style.md",id:"components-upload-demo-picture-style"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadFile } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    uid<span class="token punctuation">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n    status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n    url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    thumbUrl<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    uid<span class="token punctuation">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n    status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;></span>\n    <span class="token operator">&lt;</span>Upload\n      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n      listType<span class="token operator">=</span><span class="token string">"picture"</span>\n      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}\n    <span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>Upload\n      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>\n      listType<span class="token operator">=</span><span class="token string">"picture"</span>\n      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}\n      className<span class="token operator">=</span><span class="token string">"upload-list-inline"</span>\n    <span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    uid<span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n    status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    thumbUrl<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    uid<span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n    status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-1\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">thumbUrl</span><span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'-2\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>\n      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>\n      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>\n      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c=[{uid:"-1",name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"yyy.png",status:"error"}],l=function(){return e.default.createElement(e.default.Fragment,null,e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(c)},e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload")),e.default.createElement("br",null),e.default.createElement("br",null),e.default.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(c),className:"upload-list-inline"},e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload")))};return n.createElement(l)},style:"/* tile uploaded pictures */\n.upload-list-inline .ant-upload-list-item {\n  float: left;\n  width: 200px;\n  margin-right: 8px;\n}\n\n.upload-list-inline [class*='-upload-list-rtl'] .ant-upload-list-item {\n  float: right;\n}",highlightedStyle:'<span class="token comment" spellcheck="true">/* tile uploaded pictures */</span>\n<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>\n  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token attribute">[class*=\'-upload-list-rtl\']</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},4628:function(n,s,a){n.exports={content:{"zh-CN":[["p","自定义本地预览，用于处理非图片格式文件（例如视频文件）。"]],"en-US":[["p","Customize local preview. Can handle with non-image format files such as video."]]},meta:{order:9,title:{"zh-CN":"自定义预览","en-US":"Customize preview file"},filename:"components/upload/demo/preview-file.md",id:"components-upload-demo-preview-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  listType<span class="token punctuation">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Your upload file:\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span> Your process logic<span class="token punctuation">.</span> Here we just mock <span class="token keyword">to</span> the same file\n    return <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://next.json-generator.com/api/json/get/4ytyBoLK8\'</span><span class="token punctuation">,</span> {\n      method<span class="token punctuation">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> file<span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ thumbnail }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> thumbnail<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token operator">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  listType<span class="token operator">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Your upload file:\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// Your process logic. Here we just mock to the same file</span>\n    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://next.json-generator.com/api/json/get/4ytyBoLK8\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      method<span class="token operator">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      body<span class="token operator">:</span> file<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">previewFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Your upload file:\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// Your process logic. Here we just mock to the same file</span>\n    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://next.json-generator.com/api/json/get/4ytyBoLK8\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">body</span><span class="token operator">:</span> file<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",previewFile:function(n){return console.log("Your upload file:",n),fetch("https://next.json-generator.com/api/json/get/4ytyBoLK8",{method:"POST",body:n}).then((function(n){return n.json()})).then((function(n){return n.thumbnail}))}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload"))};return n.createElement(l)}}},4629:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","beforeUpload"]," 转换上传的文件（例如添加水印）。"]],"en-US":[["p","Use ",["code","beforeUpload"]," for transform file before request such as add a watermark."]]},meta:{order:10,title:{"zh-CN":"上传前转换文件","en-US":"Transform file before request"},filename:"components/upload/demo/transform-file.md",id:"components-upload-demo-transform-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  listType<span class="token punctuation">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'img\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result as string<span class="token comment" spellcheck="true">;</span>\n        img<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'canvas\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token comment" spellcheck="true">;</span>\n          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token comment" spellcheck="true">;</span>\n          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">\'2d\'</span><span class="token punctuation">)</span>!<span class="token comment" spellcheck="true">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">\'red\'</span><span class="token comment" spellcheck="true">;</span>\n          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">\'middle\'</span><span class="token comment" spellcheck="true">;</span>\n          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">\'33px Arial\'</span><span class="token comment" spellcheck="true">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">\'Ant Design\'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result as any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token comment" spellcheck="true">;</span>\n      }<span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  listType<span class="token operator">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'img\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">;</span>\n        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'canvas\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>\n          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">\'2d\'</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">\'red\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">\'middle\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">\'33px Arial\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">\'Ant Design\'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  <span class="token function">beforeUpload</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'img\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>\n        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'canvas\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>\n          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">\'2d\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">\'red\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">\'middle\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">\'33px Arial\'</span><span class="token punctuation">;</span>\n          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">\'Ant Design\'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",beforeUpload:function(n){return new Promise((function(s){var a=new FileReader;a.readAsDataURL(n),a.onload=function(){var n=document.createElement("img");n.src=a.result,n.onload=function(){var a=document.createElement("canvas");a.width=n.naturalWidth,a.height=n.naturalHeight;var t=a.getContext("2d");t.drawImage(n,0,0),t.fillStyle="red",t.textBaseline="middle",t.font="33px Arial",t.fillText("Ant Design",20,20),a.toBlob((function(n){return s(n)}))}}}))}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload"))};return n.createElement(l)}}},4630:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","showUploadList"]," 设置列表交互图标。"]],"en-US":[["p","Use ",["code","showUploadList"]," for custom action icons of files."]]},meta:{order:12,title:{"zh-CN":"自定义交互图标","en-US":"custom action icon"},filename:"components/upload/demo/upload-custom-action-icon.md",id:"components-upload-demo-upload-custom-action-icon"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { StarOutlined<span class="token punctuation">,</span> UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span>\n  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      response<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      uid<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      response<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  showUploadList<span class="token punctuation">:</span> {\n    showDownloadIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    downloadIcon<span class="token punctuation">:</span> <span class="token string">\'Download\'</span><span class="token punctuation">,</span>\n    showRemoveIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    removeIcon<span class="token punctuation">:</span> <span class="token operator">&lt;</span>StarOutlined onClick<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'custom removeIcon event\'</span><span class="token punctuation">)</span>} <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      response<span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      uid<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      status<span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      response<span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>\n      url<span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  showUploadList<span class="token operator">:</span> <span class="token punctuation">{</span>\n    showDownloadIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    downloadIcon<span class="token operator">:</span> <span class="token string">\'Download\'</span><span class="token punctuation">,</span>\n    showRemoveIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    removeIcon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'custom removeIcon event\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// custom error message to show</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// custom error message to show</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">showUploadList</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">showDownloadIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">downloadIcon</span><span class="token operator">:</span> <span class="token string">\'Download\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">showRemoveIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">removeIcon</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'custom removeIcon event\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(n){var s=n.file,a=n.fileList;"uploading"!==s.status&&console.log(s,a)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}],showUploadList:{showDownloadIcon:!0,downloadIcon:"Download",showRemoveIcon:!0,removeIcon:e.default.createElement(p.StarOutlined,{onClick:function(n){return console.log(n,"custom removeIcon event")}})}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload"))};return n.createElement(l)}}},4631:function(n,s,a){n.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," 返回 ",["code","false"]," 后，手动上传文件。"]],"en-US":[["p","Upload files manually after ",["code","beforeUpload"]," returns ",["code","false"],"."]]},meta:{order:7,title:{"zh-CN":"手动上传","en-US":"Upload manually"},filename:"components/upload/demo/upload-manually.md",id:"components-upload-demo-upload-manually"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> formData <span class="token operator">=</span> new <span class="token function">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {\n      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'files[]\'</span><span class="token punctuation">,</span> file as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span> You can use any AJAX library you like\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span> {\n      method<span class="token punctuation">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'upload successfully.\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'upload failed.\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n    onRemove<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span>\n    beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n      return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span>\n    fileList<span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;></span>\n      <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span><span class="token keyword">Select</span> File<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button\n        type<span class="token operator">=</span><span class="token string">"primary"</span>\n        onClick<span class="token operator">=</span>{handleUpload}\n        disabled<span class="token operator">=</span>{fileList<span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span>}\n        loading<span class="token operator">=</span>{uploading}\n        style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">16</span> }}\n      <span class="token operator">></span>\n        {uploading <span class="token operator">?</span> <span class="token string">\'Uploading\'</span> <span class="token punctuation">:</span> <span class="token string">\'Start Upload\'</span>}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>\n      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'files[]\'</span><span class="token punctuation">,</span> file <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// You can use any AJAX library you like</span>\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      method<span class="token operator">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      body<span class="token operator">:</span> formData<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'upload successfully.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'upload failed.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    fileList<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>\n        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">\'Uploading\'</span> <span class="token operator">:</span> <span class="token string">\'Start Upload\'</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'files[]\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// You can use any AJAX library you like</span>\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">body</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'upload successfully.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'upload failed.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    fileList<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>\n        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">\'Uploading\'</span> <span class="token operator">:</span> <span class="token string">\'Start Upload\'</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(n){return function(n){if(Array.isArray(n))return k(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||i(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||i(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(n,s){if(n){if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?k(n,s):void 0}}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var r=function(){var n=u((0,e.useState)([]),2),s=n[0],a=n[1],t=u((0,e.useState)(!1),2),c=t[0],i=t[1],k={onRemove:function(n){var t=s.indexOf(n),p=s.slice();p.splice(t,1),a(p)},beforeUpload:function(n){return a([].concat(l(s),[n])),!1},fileList:s};return e.default.createElement(e.default.Fragment,null,e.default.createElement(o.Upload,k,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Select File")),e.default.createElement(o.Button,{type:"primary",onClick:function(){var n=new FormData;s.forEach((function(s){n.append("files[]",s)})),i(!0),fetch("https://www.mocky.io/v2/5cc8019d300000980a055e76",{method:"POST",body:n}).then((function(n){return n.json()})).then((function(){a([]),o.message.success("upload successfully.")})).catch((function(){o.message.error("upload failed.")})).finally((function(){i(!1)}))},disabled:0===s.length,loading:c,style:{marginTop:16}},c?"Uploading":"Start Upload"))};return n.createElement(r)}}},4632:function(n,s,a){n.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," 返回 ",["code","false"]," 或 ",["code","Promise.reject"]," 时，只用于拦截上传行为，不会阻止文件进入上传列表（",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/15561#issuecomment-475108235"},"原因"],"）。如果需要阻止列表展现，可以通过返回 ",["code","Upload.LIST_IGNORE"]," 实现。"]],"en-US":[["p",["code","beforeUpload"]," only prevent upload behavior when return false or reject promise, the prevented file would still show in file list. Here is the example you can keep prevented files out of list by return ",["code","UPLOAD.LIST_IGNORE"],"."]]},meta:{order:7.1,title:{"zh-CN":"只上传 png 图片","en-US":"Upload png file only"},filename:"components/upload/demo/upload-png-only.md",id:"components-upload-demo-upload-png-only"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n  beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'image/png\'</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!isPNG<span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>`${file<span class="token punctuation">.</span>name} is <span class="token operator">not</span> a png file`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    return isPNG || Upload<span class="token punctuation">.</span>LIST_IGNORE<span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n  onChange<span class="token punctuation">:</span> info <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload png only<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/png\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onChange</span><span class="token operator">:</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/png\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);s.default=void 0;var t,p=a(65),o=a(17),e=(t=a(0))&&t.__esModule?t:{default:t};var c={beforeUpload:function(n){var s="image/png"===n.type;return s||o.message.error("".concat(n.name," is not a png file")),s||o.Upload.LIST_IGNORE},onChange:function(n){console.log(n.fileList)}},l=function(){return e.default.createElement(o.Upload,c,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Upload png only"))};return n.createElement(l)}}},4633:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用阿里云 OSS 上传示例."]],"en-US":[["p","Use Aliyun OSS upload example."]]},meta:{order:11,title:{"zh-CN":"阿里云 OSS","en-US":"Aliyun OSS"},filename:"components/upload/demo/upload-with-aliyun-oss.md",id:"components-upload-demo-upload-with-aliyun-oss"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { UploadOutlined } from <span class="token string">\'@ant-design/icons\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadProps } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { UploadFile } from <span class="token string">\'antd/es/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> { useEffect<span class="token punctuation">,</span> useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\n\ninterface OSSDataType {\n  dir<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  expire<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  host<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  accessId<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  policy<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  signature<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n}\n\ninterface AliyunOSSUploadProps {\n  value<span class="token operator">?</span><span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n  onChange<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> AliyunOSSUpload <span class="token operator">=</span> <span class="token punctuation">(</span>{ value<span class="token punctuation">,</span> onChange }<span class="token punctuation">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token operator">/</span><span class="token operator">/</span> Mock get OSS api\n  <span class="token operator">/</span><span class="token operator">/</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>document_detail<span class="token operator">/</span><span class="token number">31988</span><span class="token punctuation">.</span>html\n  <span class="token keyword">const</span> mockGetOSSData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n    dir<span class="token punctuation">:</span> <span class="token string">\'user-dir/\'</span><span class="token punctuation">,</span>\n    expire<span class="token punctuation">:</span> <span class="token string">\'1577811661\'</span><span class="token punctuation">,</span>\n    host<span class="token punctuation">:</span> <span class="token string">\'//www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    accessId<span class="token punctuation">:</span> <span class="token string">\'c2hhb2RhaG9uZw==\'</span><span class="token punctuation">,</span>\n    policy<span class="token punctuation">:</span> <span class="token string">\'eGl4aWhhaGFrdWt1ZGFkYQ==\'</span><span class="token punctuation">,</span>\n    signature<span class="token punctuation">:</span> <span class="token string">\'ZGFob25nc2hhbw==\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> init <span class="token operator">=</span> async <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    try {\n      <span class="token keyword">const</span> result <span class="token operator">=</span> await <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    } catch <span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Aliyun OSS:\'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    onChange<span class="token operator">?</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onRemove <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value || <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v<span class="token punctuation">.</span>url !<span class="token operator">==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> {\n      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> getExtraData<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n    key<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n    OSSAccessKeyId<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>accessId<span class="token punctuation">,</span>\n    policy<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>policy<span class="token punctuation">,</span>\n    Signature<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>signature<span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> beforeUpload<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'beforeUpload\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> async file <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!OSSData<span class="token punctuation">)</span> return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n      await <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@ts</span><span class="token operator">-</span>ignore\n    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token comment" spellcheck="true">;</span>\n\n    return file<span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> uploadProps<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {\n    name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n    fileList<span class="token punctuation">:</span> value<span class="token punctuation">,</span>\n    action<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>host<span class="token punctuation">,</span>\n    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>\n    onRemove<span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> getExtraData<span class="token punctuation">,</span>\n    beforeUpload<span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>uploadProps}<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Form labelCol<span class="token operator">=</span>{{ span<span class="token punctuation">:</span> <span class="token number">4</span> }}<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Photos"</span> name<span class="token operator">=</span><span class="token string">"photos"</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>AliyunOSSUpload <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/es/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">OSSDataType</span> <span class="token punctuation">{</span>\n  dir<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  expire<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  host<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  accessId<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  policy<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  signature<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">AliyunOSSUploadProps</span> <span class="token punctuation">{</span>\n  value<span class="token operator">?</span><span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token operator">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Mock get OSS api</span>\n  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    dir<span class="token operator">:</span> <span class="token string">\'user-dir/\'</span><span class="token punctuation">,</span>\n    expire<span class="token operator">:</span> <span class="token string">\'1577811661\'</span><span class="token punctuation">,</span>\n    host<span class="token operator">:</span> <span class="token string">\'//www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    accessId<span class="token operator">:</span> <span class="token string">\'c2hhb2RhaG9uZw==\'</span><span class="token punctuation">,</span>\n    policy<span class="token operator">:</span> <span class="token string">\'eGl4aWhhaGFrdWt1ZGFkYQ==\'</span><span class="token punctuation">,</span>\n    signature<span class="token operator">:</span> <span class="token string">\'ZGFob25nc2hhbw==\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'onChange\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Aliyun OSS:\'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> getExtraData<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n    OSSAccessKeyId<span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>\n    policy<span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>\n    Signature<span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> beforeUpload<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">\'beforeUpload\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>\n    <span class="token comment">// @ts-ignore</span>\n    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> file<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> uploadProps<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n    fileList<span class="token operator">:</span> value<span class="token punctuation">,</span>\n    action<span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>\n    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n    onRemove<span class="token punctuation">,</span>\n    data<span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>\n    beforeUpload<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@hankliu/hankliu-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Mock get OSS api</span>\n  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">\'user-dir/\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">expire</span><span class="token operator">:</span> <span class="token string">\'1577811661\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">\'//www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">accessId</span><span class="token operator">:</span> <span class="token string">\'c2hhb2RhaG9uZw==\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">policy</span><span class="token operator">:</span> <span class="token string">\'eGl4aWhhaGFrdWt1ZGFkYQ==\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">signature</span><span class="token operator">:</span> <span class="token string">\'ZGFob25nc2hhbw==\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Aliyun OSS:\'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">getExtraData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">key</span><span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n    <span class="token literal-property property">OSSAccessKeyId</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>\n    <span class="token literal-property property">policy</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>\n    <span class="token literal-property property">Signature</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>\n    <span class="token comment">// @ts-ignore</span>\n    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> file<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> uploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">fileList</span><span class="token operator">:</span> value<span class="token punctuation">,</span>\n    <span class="token literal-property property">action</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>\n    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n    onRemove<span class="token punctuation">,</span>\n    <span class="token literal-property property">data</span><span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>\n    beforeUpload<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>\n    <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'},preview:function(){var n=a(0);a(37);function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=void 0;var p=a(65),o=a(17),e=function(n,s){if(!s&&n&&n.__esModule)return n;if(null===n||"object"!=t(n)&&"function"!=typeof n)return{default:n};var a=c(s);if(a&&a.has(n))return a.get(n);var p={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in n)if("default"!==e&&{}.hasOwnProperty.call(n,e)){var l=o?Object.getOwnPropertyDescriptor(n,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=n[e]}return p.default=n,a&&a.set(n,p),p}(a(0));function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(n){return function(n){if(Array.isArray(n))return m(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||d(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */u=function(){return s};var n,s={},a=Object.prototype,p=a.hasOwnProperty,o=Object.defineProperty||function(n,s,a){n[s]=a.value},e="function"==typeof Symbol?Symbol:{},c=e.iterator||"@@iterator",l=e.asyncIterator||"@@asyncIterator",i=e.toStringTag||"@@toStringTag";function k(n,s,a){return Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}),n[s]}try{k({},"")}catch(n){k=function(n,s,a){return n[s]=a}}function r(n,s,a,t){var p=s&&s.prototype instanceof h?s:h,e=Object.create(p.prototype),c=new E(t||[]);return o(e,"_invoke",{value:P(n,a,c)}),e}function d(n,s,a){try{return{type:"normal",arg:n.call(s,a)}}catch(n){return{type:"throw",arg:n}}}s.wrap=r;var m="suspendedStart",g="executing",f="completed",y={};function h(){}function w(){}function v(){}var b={};k(b,c,(function(){return this}));var U=Object.getPrototypeOf,x=U&&U(U(R([])));x&&x!==a&&p.call(x,c)&&(b=x);var j=v.prototype=h.prototype=Object.create(b);function L(n){["next","throw","return"].forEach((function(s){k(n,s,(function(n){return this._invoke(s,n)}))}))}function S(n,s){function a(o,e,c,l){var u=d(n[o],n,e);if("throw"!==u.type){var i=u.arg,k=i.value;return k&&"object"==t(k)&&p.call(k,"__await")?s.resolve(k.__await).then((function(n){a("next",n,c,l)}),(function(n){a("throw",n,c,l)})):s.resolve(k).then((function(n){i.value=n,c(i)}),(function(n){return a("throw",n,c,l)}))}l(u.arg)}var e;o(this,"_invoke",{value:function(n,t){function p(){return new s((function(s,p){a(n,t,s,p)}))}return e=e?e.then(p,p):p()}})}function P(s,a,t){var p=m;return function(o,e){if(p===g)throw Error("Generator is already running");if(p===f){if("throw"===o)throw e;return{value:n,done:!0}}for(t.method=o,t.arg=e;;){var c=t.delegate;if(c){var l=O(c,t);if(l){if(l===y)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(p===m)throw p=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);p=g;var u=d(s,a,t);if("normal"===u.type){if(p=t.done?f:"suspendedYield",u.arg===y)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(p=f,t.method="throw",t.arg=u.arg)}}}function O(s,a){var t=a.method,p=s.iterator[t];if(p===n)return a.delegate=null,"throw"===t&&s.iterator.return&&(a.method="return",a.arg=n,O(s,a),"throw"===a.method)||"return"!==t&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+t+"' method")),y;var o=d(p,s.iterator,a.arg);if("throw"===o.type)return a.method="throw",a.arg=o.arg,a.delegate=null,y;var e=o.arg;return e?e.done?(a[s.resultName]=e.value,a.next=s.nextLoc,"return"!==a.method&&(a.method="next",a.arg=n),a.delegate=null,y):e:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,y)}function C(n){var s={tryLoc:n[0]};1 in n&&(s.catchLoc=n[1]),2 in n&&(s.finallyLoc=n[2],s.afterLoc=n[3]),this.tryEntries.push(s)}function F(n){var s=n.completion||{};s.type="normal",delete s.arg,n.completion=s}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(C,this),this.reset(!0)}function R(s){if(s||""===s){var a=s[c];if(a)return a.call(s);if("function"==typeof s.next)return s;if(!isNaN(s.length)){var o=-1,e=function a(){for(;++o<s.length;)if(p.call(s,o))return a.value=s[o],a.done=!1,a;return a.value=n,a.done=!0,a};return e.next=e}}throw new TypeError(t(s)+" is not iterable")}return w.prototype=v,o(j,"constructor",{value:v,configurable:!0}),o(v,"constructor",{value:w,configurable:!0}),w.displayName=k(v,i,"GeneratorFunction"),s.isGeneratorFunction=function(n){var s="function"==typeof n&&n.constructor;return!!s&&(s===w||"GeneratorFunction"===(s.displayName||s.name))},s.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,v):(n.__proto__=v,k(n,i,"GeneratorFunction")),n.prototype=Object.create(j),n},s.awrap=function(n){return{__await:n}},L(S.prototype),k(S.prototype,l,(function(){return this})),s.AsyncIterator=S,s.async=function(n,a,t,p,o){void 0===o&&(o=Promise);var e=new S(r(n,a,t,p),o);return s.isGeneratorFunction(a)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},L(j),k(j,i,"Generator"),k(j,c,(function(){return this})),k(j,"toString",(function(){return"[object Generator]"})),s.keys=function(n){var s=Object(n),a=[];for(var t in s)a.push(t);return a.reverse(),function n(){for(;a.length;){var t=a.pop();if(t in s)return n.value=t,n.done=!1,n}return n.done=!0,n}},s.values=R,E.prototype={constructor:E,reset:function(s){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(F),!s)for(var a in this)"t"===a.charAt(0)&&p.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=n)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(s){if(this.done)throw s;var a=this;function t(t,p){return c.type="throw",c.arg=s,a.next=t,p&&(a.method="next",a.arg=n),!!p}for(var o=this.tryEntries.length-1;o>=0;--o){var e=this.tryEntries[o],c=e.completion;if("root"===e.tryLoc)return t("end");if(e.tryLoc<=this.prev){var l=p.call(e,"catchLoc"),u=p.call(e,"finallyLoc");if(l&&u){if(this.prev<e.catchLoc)return t(e.catchLoc,!0);if(this.prev<e.finallyLoc)return t(e.finallyLoc)}else if(l){if(this.prev<e.catchLoc)return t(e.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<e.finallyLoc)return t(e.finallyLoc)}}}},abrupt:function(n,s){for(var a=this.tryEntries.length-1;a>=0;--a){var t=this.tryEntries[a];if(t.tryLoc<=this.prev&&p.call(t,"finallyLoc")&&this.prev<t.finallyLoc){var o=t;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=s&&s<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=s,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(e)},complete:function(n,s){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&s&&(this.next=s),y},finish:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.finallyLoc===n)return this.complete(a.completion,a.afterLoc),F(a),y}},catch:function(n){for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s];if(a.tryLoc===n){var t=a.completion;if("throw"===t.type){var p=t.arg;F(a)}return p}}throw Error("illegal catch attempt")},delegateYield:function(s,a,t){return this.delegate={iterator:R(s),resultName:a,nextLoc:t},"next"===this.method&&(this.arg=n),y}},s}function i(n,s,a,t,p,o,e){try{var c=n[o](e),l=c.value}catch(n){return void a(n)}c.done?s(l):Promise.resolve(l).then(t,p)}function k(n){return function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){i(o,t,p,e,c,"next",n)}function c(n){i(o,t,p,e,c,"throw",n)}e(void 0)}))}}function r(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=a){var t,p,o,e,c=[],l=!0,u=!1;try{if(o=(a=a.call(n)).next,0===s){if(Object(a)!==a)return;l=!1}else for(;!(l=(t=o.call(a)).done)&&(c.push(t.value),c.length!==s);l=!0);}catch(n){u=!0,p=n}finally{try{if(!l&&null!=a.return&&(e=a.return(),Object(e)!==e))return}finally{if(u)throw p}}return c}}(n,s)||d(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(n,s){if(n){if("string"==typeof n)return m(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?m(n,s):void 0}}function m(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var g=function(n){var s=n.value,a=n.onChange,t=r((0,e.useState)(),2),c=t[0],i=t[1],d=function(){var n=k(u().mark((function n(){var s;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,{dir:"user-dir/",expire:"1577811661",host:"//www.mocky.io/v2/5cc8019d300000980a055e76",accessId:"c2hhb2RhaG9uZw==",policy:"eGl4aWhhaGFrdWt1ZGFkYQ==",signature:"ZGFob25nc2hhbw=="};case 3:s=n.sent,i(s),n.next=10;break;case 7:n.prev=7,n.t0=n.catch(0),o.message.error(n.t0);case 10:case"end":return n.stop()}}),n,null,[[0,7]])})));return function(){return n.apply(this,arguments)}}();(0,e.useEffect)((function(){d()}),[]);var m=function(){var n=k(u().mark((function n(s){var a,t;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(c){n.next=2;break}return n.abrupt("return",!1);case 2:if(!(1e3*Number(c.expire)<Date.now())){n.next=6;break}return n.next=6,d();case 6:return a=s.name.slice(s.name.lastIndexOf(".")),t=Date.now()+a,s.url=c.dir+t,n.abrupt("return",s);case 10:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}(),g={name:"file",fileList:s,action:null==c?void 0:c.host,onChange:function(n){var s=n.fileList;console.log("Aliyun OSS:",s),null==a||a(l(s))},onRemove:function(n){var t=(s||[]).filter((function(s){return s.url!==n.url}));a&&a(t)},data:function(n){return{key:n.url,OSSAccessKeyId:null==c?void 0:c.accessId,policy:null==c?void 0:c.policy,Signature:null==c?void 0:c.signature}},beforeUpload:m};return e.default.createElement(o.Upload,g,e.default.createElement(o.Button,{icon:e.default.createElement(p.UploadOutlined,null)},"Click to Upload"))},f=function(){return e.default.createElement(o.Form,{labelCol:{span:4}},e.default.createElement(o.Form.Item,{label:"Photos",name:"photos"},e.default.createElement(g,null)))};return n.createElement(f)}}}}]);